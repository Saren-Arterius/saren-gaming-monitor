--- index.html
+++ index.html
@@ -96,7 +96,7 @@
       align-items: center;
       justify-content: center;
       background: conic-gradient(transparent 0deg, transparent var(--a), rgb(0, 0, 0) calc(var(--a) + 0.2%));
-      z-index: -2;
+      z-index: 2;
       transition: --a 1s ease-out;
     }
 
@@ -111,12 +111,13 @@
 
     .container::before {
       content: '';
-      position: absolute;
+      position: fixed;
       backdrop-filter: blur(32px) brightness(3) saturate(2);
       opacity: 0.25;
-      z-index: -1;
+      z-index: 3;
       inset: 0px;
       height: 100vh;
+      pointer-events: none;
     }
 
     @media screen and (max-width: 540px) {
@@ -472,161 +481,162 @@
       }
 
       return (
-        <div className="container" style={{ display: isSmallPortrait ? 'flex' : undefined, flexWrap: isSmallPortrait ? 'wrap' : undefined, maxWidth: isSmallPortrait ? '100vw' : undefined }}>
-          <div style={{ paddingTop: 10 }}></div>
-          <div className="section" style={{ minHeight: sectionMinHeight, width: isSmallPortrait ? 'calc(50% - 40px)' : undefined, marginRight: isSmallPortrait ? 80 : undefined }}>
-            <div className="section-title">Temperature</div>
-            <div className="gauge-container">
-              <Gauge
-                value={store.temperatures.cpu}
-                min={store.GAUGE_LIMITS.temperature.cpu.min}
-                max={store.GAUGE_LIMITS.temperature.cpu.max}
-                label="CPU"
-                className="temperature"
-                featherName="cpu"
-              />
-              <Gauge
-                value={store.temperatures.ssd}
-                min={store.GAUGE_LIMITS.temperature.ssd.min}
-                max={store.GAUGE_LIMITS.temperature.ssd.max}
-                label="SSD (System)"
-                className="temperature"
-                featherName="hard-drive"
-              />
-              <Gauge
-                value={store.temperatures.ssd2}
-                min={store.GAUGE_LIMITS.temperature.ssd2.min}
-                max={store.GAUGE_LIMITS.temperature.ssd2.max}
-                label="SSD (Storage)"
-                className="temperature"
-                featherName="hard-drive"
-              />
-            </div>
-          </div>
-          <div className="section" style={{ minHeight: sectionMinHeight, width: isSmallPortrait ? 'calc(50% - 40px)' : undefined }}>
-            <div className="section-title">Usage</div>
-            <div className="gauge-container" style={{ marginTop: isSmallPortrait ? 25 : undefined }}>
-              <Gauge value={store.usage.cpu} max={100} label="CPU" className="usage" featherName="cpu" small cpuFreq />
-              <Gauge value={store.usage.ram} valueMB={store.usageMB.ram} max={100} label="RAM" className="usage" featherName="server" small />
-              <Gauge value={store.usage.ssd} valueGB={store.usageGB.ssd} max={100} label="System" className="usage" featherName="hard-drive" small clickFn={() => showStorageInfo("system")}
-                textColor={STORAGE_TEXT_COLOR[store.storageInfo.system?.info?.status || 0]}
-                textExtra={STORAGE_EXTRA_TEXT[store.storageInfo.system?.info?.status || 0]}
-              />
-              <Gauge value={store.usage.ssd2} valueGB={store.usageGB.ssd2} max={100} label="Storage" className="usage" featherName="hard-drive" small clickFn={() => showStorageInfo("storage")}
-                textColor={STORAGE_TEXT_COLOR[store.storageInfo.storage?.info?.status || 0]}
-                textExtra={STORAGE_EXTRA_TEXT[store.storageInfo.storage?.info?.status || 0]}
-              />
-
-            </div>
-          </div>
-          <div className="section" style={{
-            minHeight: sectionMinHeight,
-            width: isSmallPortrait ? 'calc(50% - 40px)' : undefined,
-            marginRight: isSmallPortrait ? 40 : undefined,
-            marginTop: isSmallPortrait ? 10 : undefined
-          }}>
-            <div className="section-title">I/O</div>
-            <div className="gauge-container" style={{
-              marginTop: isSmallPortrait ? 20 : undefined
-            }}>
-              <Gauge
-                value={store.io.diskRead}
-                max={store.GAUGE_LIMITS.io.diskRead.max}
-                label="Disk Read"
-                className="io"
-                featherName="hard-drive"
-                small
-              />
-              <Gauge
-                value={store.io.diskWrite}
-                max={store.GAUGE_LIMITS.io.diskWrite.max}
-                label="Disk Write"
-                className="io"
-                featherName="activity"
-                small
-              />
-              <Gauge
-                value={store.io.networkRx}
-                max={store.GAUGE_LIMITS.io.networkRx.max}
-                label="Internet RX"
-                className="io"
-                featherName="globe"
-                small
-              />
-              <Gauge
-                value={store.io.networkTx}
-                max={store.GAUGE_LIMITS.io.networkTx.max}
-                label="Internet TX"
-                className="io"
-                featherName="globe"
-                small
-              />
-            </div>
-          </div>
-          <div style={{
-            display: 'flex',
-            marginTop: isSmallPortrait ? 10 : infoMT,
-            width: isSmallPortrait ? 'calc(50% - 40px)' : undefined,
-            flexGrow: isSmallPortrait ? 1 : undefined
-          }} >
-            <div className="section" style={{ flexGrow: 1, minHeight: sectionMinHeight }}  >
-              <div className="section-title">Fan Speed</div>
+        <>
+          <div className="container" style={{ display: isSmallPortrait ? 'flex' : undefined, flexWrap: isSmallPortrait ? 'wrap' : undefined, maxWidth: isSmallPortrait ? '100vw' : undefined }}>
+            <div style={{ paddingTop: 10 }}></div>
+            <div className="section" style={{ minHeight: sectionMinHeight, width: isSmallPortrait ? 'calc(50% - 40px)' : undefined, marginRight: isSmallPortrait ? 80 : undefined }}>
+              <div className="section-title">Temperature</div>
               <div className="gauge-container">
                 <Gauge
-                  value={store.fanSpeed.cpu}
-                  max={store.GAUGE_LIMITS.fanSpeed.cpu.max}
+                  value={store.temperatures.cpu}
+                  min={store.GAUGE_LIMITS.temperature.cpu.min}
+                  max={store.GAUGE_LIMITS.temperature.cpu.max}
                   label="CPU"
-                  className="fan"
+                  className="temperature"
                   featherName="cpu"
                 />
                 <Gauge
-                  value={store.fanSpeed.ssd}
-                  max={store.GAUGE_LIMITS.fanSpeed.ssd.max}
-                  label="SSD"
-                  className="fan"
+                  value={store.temperatures.ssd}
+                  min={store.GAUGE_LIMITS.temperature.ssd.min}
+                  max={store.GAUGE_LIMITS.temperature.ssd.max}
+                  label="SSD (System)"
+                  className="temperature"
+                  featherName="hard-drive"
+                />
+                <Gauge
+                  value={store.temperatures.ssd2}
+                  min={store.GAUGE_LIMITS.temperature.ssd2.min}
+                  max={store.GAUGE_LIMITS.temperature.ssd2.max}
+                  label="SSD (Storage)"
+                  className="temperature"
                   featherName="hard-drive"
                 />
               </div>
+            </div>
+            <div className="section" style={{ minHeight: sectionMinHeight, width: isSmallPortrait ? 'calc(50% - 40px)' : undefined }}>
+              <div className="section-title">Usage</div>
+              <div className="gauge-container" style={{ marginTop: isSmallPortrait ? 25 : undefined }}>
+                <Gauge value={store.usage.cpu} max={100} label="CPU" className="usage" featherName="cpu" small cpuFreq />
+                <Gauge value={store.usage.ram} valueMB={store.usageMB.ram} max={100} label="RAM" className="usage" featherName="server" small />
+                <Gauge value={store.usage.ssd} valueGB={store.usageGB.ssd} max={100} label="System" className="usage" featherName="hard-drive" small clickFn={() => showStorageInfo("system")}
+                  textColor={STORAGE_TEXT_COLOR[store.storageInfo.system?.info?.status || 0]}
+                  textExtra={STORAGE_EXTRA_TEXT[store.storageInfo.system?.info?.status || 0]}
+                />
+                <Gauge value={store.usage.ssd2} valueGB={store.usageGB.ssd2} max={100} label="Storage" className="usage" featherName="hard-drive" small clickFn={() => showStorageInfo("storage")}
+                  textColor={STORAGE_TEXT_COLOR[store.storageInfo.storage?.info?.status || 0]}
+                  textExtra={STORAGE_EXTRA_TEXT[store.storageInfo.storage?.info?.status || 0]}
+                />
 
+              </div>
             </div>
-            <div className="section" style={{ display: 'flex', width: isSmallPortrait ? 170 : infoWidth, minHeight: sectionMinHeight }} >
-              <div className="section-title">&nbsp;</div>
-              <div style={{
-                display: 'flex',
-                flexDirection: 'column',
-                alignItems: 'end',
-                justifyContent: 'end',
-                paddingBottom: isSmallScreen ? 10 : 20,
-                width: '100%',
-                fontSize: infoFontSize,
-                zIndex: -2
+            <div className="section" style={{
+              minHeight: sectionMinHeight,
+              width: isSmallPortrait ? 'calc(50% - 40px)' : undefined,
+              marginRight: isSmallPortrait ? 40 : undefined,
+              marginTop: isSmallPortrait ? 10 : undefined
+            }}>
+              <div className="section-title">I/O</div>
+              <div className="gauge-container" style={{
+                marginTop: isSmallPortrait ? 20 : undefined
               }}>
-                <div style={{ fontSize: '1.5em', fontWeight: 600, zIndex: -2, color: COLOR_STOPS[loadLevel].color }}>
-                  {store.SYSTEM_INFO.hostname}
+                <Gauge
+                  value={store.io.diskRead}
+                  max={store.GAUGE_LIMITS.io.diskRead.max}
+                  label="Disk Read"
+                  className="io"
+                  featherName="hard-drive"
+                  small
+                />
+                <Gauge
+                  value={store.io.diskWrite}
+                  max={store.GAUGE_LIMITS.io.diskWrite.max}
+                  label="Disk Write"
+                  className="io"
+                  featherName="activity"
+                  small
+                />
+                <Gauge
+                  value={store.io.networkRx}
+                  max={store.GAUGE_LIMITS.io.networkRx.max}
+                  label="Internet RX"
+                  className="io"
+                  featherName="globe"
+                  small
+                />
+                <Gauge
+                  value={store.io.networkTx}
+                  max={store.GAUGE_LIMITS.io.networkTx.max}
+                  label="Internet TX"
+                  className="io"
+                  featherName="globe"
+                  small
+                />
+              </div>
+            </div>
+            <div style={{
+              display: 'flex',
+              marginTop: isSmallPortrait ? 10 : infoMT,
+              width: isSmallPortrait ? 'calc(50% - 40px)' : undefined,
+              flexGrow: isSmallPortrait ? 1 : undefined
+            }} >
+              <div className="section" style={{ flexGrow: 1, minHeight: sectionMinHeight }}  >
+                <div className="section-title">Fan Speed</div>
+                <div className="gauge-container">
+                  <Gauge
+                    value={store.fanSpeed.cpu}
+                    max={store.GAUGE_LIMITS.fanSpeed.cpu.max}
+                    label="CPU"
+                    className="fan"
+                    featherName="cpu"
+                  />
+                  <Gauge
+                    value={store.fanSpeed.ssd}
+                    max={store.GAUGE_LIMITS.fanSpeed.ssd.max}
+                    label="SSD"
+                    className="fan"
+                    featherName="hard-drive"
+                  />
+                </div>
+
+              </div>
+              <div className="section" style={{ display: 'flex', width: isSmallPortrait ? 170 : infoWidth, minHeight: sectionMinHeight }} >
+                <div className="section-title">&nbsp;</div>
+                <div style={{
+                  display: 'flex',
+                  flexDirection: 'column',
+                  alignItems: 'end',
+                  justifyContent: 'end',
+                  paddingBottom: isSmallScreen ? 10 : 20,
+                  width: '100%',
+                  fontSize: infoFontSize,
+                  zIndex: 2
+                }}>
+                  <div style={{ fontSize: '1.5em', fontWeight: 600, zIndex: 2, color: COLOR_STOPS[loadLevel].color }}>
+                    {store.SYSTEM_INFO.hostname}
+                  </div>
+                  <div style={{ opacity: 0.5 }}>{store.SYSTEM_INFO.cpu}</div>
+                  <div style={{ opacity: 0.5 }}>{store.SYSTEM_INFO.gpu}</div>
+                  <div style={{ opacity: 0.5 }}>{store.SYSTEM_INFO.case}</div>
+                  <div style={{ opacity: 0.5 }}>{store.SYSTEM_INFO.os}</div>
+                  <div style={{ fontWeight: 500, opacity: 0.8 }}>{store.system}</div>
+                  <div style={{ fontWeight: 600 }}>{getGMT8Time(store.lastUpdate)}</div>
                 </div>
-                <div style={{ opacity: 0.5 }}>{store.SYSTEM_INFO.cpu}</div>
-                <div style={{ opacity: 0.5 }}>{store.SYSTEM_INFO.gpu}</div>
-                <div style={{ opacity: 0.5 }}>{store.SYSTEM_INFO.case}</div>
-                <div style={{ opacity: 0.5 }}>{store.SYSTEM_INFO.os}</div>
-                <div style={{ fontWeight: 500, opacity: 0.8 }}>{store.system}</div>
-                <div style={{ fontWeight: 600 }}>{getGMT8Time(store.lastUpdate)}</div>
               </div>
             </div>
-          </div>
-          {store.networkMetrics?.ping_statistics?.minute_history && (
-            <div style={{ width: '100%', marginTop: isSmallPortrait ? 8 : 16, }} onClick={() => {
-              const formatShort = (date) => {
-                return new Intl.DateTimeFormat('en-US', {
-                  month: 'long',
-                  day: 'numeric',
-                  hour: '2-digit',
-                  minute: '2-digit',
-                  second: '2-digit',
-                  hour12: false
-                }).format(date).replace(/, (\d+):/, ', $1:');
-              };
-
-              let message = `Open Ports: ${store.networkMetrics.internet_ports.map(s => s.replace(/open/g, '').trim())?.join(', ') || 'None'}
+            {store.networkMetrics?.ping_statistics?.minute_history && (
+              <div style={{ width: '100%', paddingTop: isSmallPortrait ? 8 : 16, paddingBottom: 16, cursor: 'pointer' }} onClick={() => {
+                const formatShort = (date) => {
+                  return new Intl.DateTimeFormat('en-US', {
+                    month: 'long',
+                    day: 'numeric',
+                    hour: '2-digit',
+                    minute: '2-digit',
+                    second: '2-digit',
+                    hour12: false
+                  }).format(date).replace(/, (\d+):/, ', $1:');
+                };
+
+                let message = `Open Ports: ${store.networkMetrics.internet_ports.map(s => s.replace(/open/g, '').trim())?.join(', ') || 'None'}
 
 Ping latency:
 Current: ${store.networkMetrics.ping_statistics.latency.latest}ms
@@ -644,73 +654,163 @@ Current: ${store.networkMetrics.ping_statistics.packet_loss.latest_percent}%
 
 Recent outages:
 ${store.networkMetrics.ping_statistics.outages.reverse().map(o => {
-                const start = formatShort(new Date(o.start));
-                const end = formatShort(new Date(o.end));
-                const mins = Math.floor(o.duration_seconds / 60);
-                const secs = o.duration_seconds % 60;
-                return `${start} – ${end} (${mins}m${secs}s)`;
-              }).join('\n') || 'None in last 24 hours'}
+                  const start = formatShort(new Date(o.start));
+                  const end = formatShort(new Date(o.end));
+                  const mins = Math.floor(o.duration_seconds / 60);
+                  const secs = o.duration_seconds % 60;
+                  return `${start} – ${end} (${mins}m${secs}s)`;
+                }).join('\n') || 'None in last 24 hours'}
 
 Last updated: ${formatTimeDiff(store.networkMetrics?.last_updated)}`;
-              alert(message);
-            }}>
-              <div style={{
-                display: 'flex',
-
-                flexGrow: isSmallPortrait ? 1 : undefined,
-                justifyContent: 'space-between',
-                position: 'relative',
-                zIndex: -2
+                panelAlert(message, 'Network Info');
               }}>
-                {store.networkMetrics?.ping_statistics?.minute_history.map((h, i, arr) => {
-                  let pct = Math.min(100, Math.max((h.latency_ms ** 2) / 10, h.packet_loss_percent));
-                  return (
-                    <div style={{
-                      width: '100%',
-                      marginRight: '0.05em',
-                      height: 20,
-                      opacity: 1 - ((arr.length - i) * 0.015),
-                      '--latency-ms': h.latency_ms,
-                      '--pct': pct,
-                      backgroundColor: getColorAtPercent(pct),
-                    }}></div>
-                  )
-                })}
-              </div>
-              {store.networkMetrics?.ping_statistics?.latency && (
                 <div style={{
-                  zIndex: -2,
-                  marginTop: 4,
+                  display: 'flex',
+                  flexGrow: isSmallPortrait ? 1 : undefined,
                   justifyContent: 'space-between',
                   position: 'relative',
-                  fontSize: '0.8em',
-                  display: 'flex'
+                  zIndex: 2
                 }}>
-                  {store.networkMetrics?.internet_ports.length > 0 && <div
-                    style={{ fontWeight: 400, opacity: 0.5, marginLeft: -2, }}
-                  >{store.networkMetrics?.internet_ports.map(s => s.replace(/open/g, '').trim()).join(', ')}
-                  </div>}
+                  {store.networkMetrics?.ping_statistics?.minute_history.map((h, i, arr) => {
+                    const timestamp = new Date(store.networkMetrics.ping_statistics.minute_history[i].timestamp);
+                    const formattedTime = timestamp.toLocaleTimeString('en-US', { hour: '2-digit', minute: '2-digit', hour12: false });
+                    return (
+                      <div
+                        key={i}
+                        style={{
+                          width: '100%',
+                          marginRight: '0.05em',
+                          height: 20,
+                          opacity: 1 - ((arr.length - (i + 1)) * 0.015),
+                          backgroundColor: h.latency_ms === null
+                            ? '#444444'
+                            : getColorAtPercent(Math.min(100, Math.max((h.latency_ms ** 2) / 10, h.packet_loss_percent))),
+                          position: 'relative'
+                        }}
+                        title={`Time: ${formattedTime}\nLatency: ${h.latency_ms !== null ? h.latency_ms + 'ms' : 'N/A'}\nPacket Loss: ${h.packet_loss_percent !== null ? h.packet_loss_percent + '%' : 'N/A'}`}
+                      >
+
+                      </div>
+                    );
+                  })}
+                </div>
+                {store.networkMetrics?.ping_statistics?.latency && (
                   <div style={{
-                    fontWeight: 400,
-                    opacity: 0.8,
-                    marginRight: -2,
-                    color: getColorAtPercent(Math.min(100, Math.max(
-                      ((store.networkMetrics?.ping_statistics?.latency.last1m || store.networkMetrics.ping_statistics.latency.latest) ** 2) / 10,
-                      store.networkMetrics?.ping_statistics?.packet_loss.last1m_percent)
-                    ))
-                  }} >
-                    {store.networkMetrics?.last_updated - Date.now() > 6000 && <>{formatTimeDiff(store.networkMetrics?.last_updated)} •&nbsp;</>}
-                    {store.networkMetrics?.ping_statistics?.latency.last1m?.toFixed(1) || store.networkMetrics.ping_statistics.latency.latest?.toFixed(1)}ms •&nbsp;
-                    {store.networkMetrics?.ping_statistics?.packet_loss.last1m_percent?.toFixed(1)}% loss
+                    zIndex: 2,
+                    marginTop: 4,
+                    justifyContent: 'space-between',
+                    position: 'relative',
+                    fontSize: '0.8em',
+                    display: 'flex'
+                  }}>
+                    <div
+                      style={{ fontWeight: 400, opacity: 0.5, marginLeft: -2, }}
+                    >{store.networkMetrics?.internet_ports.map(s => s.replace(/open/g, '').trim()).join(', ')}
+                    </div>
+                    <div style={{
+                      fontWeight: 400,
+                      opacity: 0.8,
+                      marginRight: -2,
+                      color: getColorAtPercent(Math.min(100, Math.max(
+                        ((store.networkMetrics?.ping_statistics?.latency.last1m || store.networkMetrics.ping_statistics.latency.latest) ** 2) / 10,
+                        store.networkMetrics?.ping_statistics?.packet_loss.last1m_percent)
+                      ))
+                    }} >
+                      {Date.now() - store.networkMetrics?.last_updated > 7000 && <>{formatTimeDiff(store.networkMetrics?.last_updated)} •&nbsp;</>}
+                      {store.networkMetrics?.ping_statistics?.latency.last1m?.toFixed(1) || store.networkMetrics.ping_statistics.latency.latest?.toFixed(1)}ms •&nbsp;
+                      {store.networkMetrics?.ping_statistics?.packet_loss.last1m_percent?.toFixed(1)}% loss
+                    </div>
+
                   </div>
+                )}
+              </div>
 
-                </div>
-              )}
-            </div>
+            )}
 
-          )}
+          </div>
 
-        </div>
+          <div style={{
+            display: 'flex',
+            width: '100%',
+            height: '100%',
+            position: 'fixed',
+            zIndex: 6,
+            alignItems: 'center',
+            justifyContent: 'center',
+            pointerEvents: (!!store.alertMessage && (store.alertExpire > Math.max(store.timeCheck, Date.now()))) ? null : 'none',
+            backdropFilter: 'blur(4px) brightness(0.65)',
+            transition: 'all 0.3s ease-in-out',
+            opacity: (!!store.alertMessage && (store.alertExpire > Math.max(store.timeCheck, Date.now()))) ? 1 : 0,
+          }}
+            onClick={() => {
+              store.alertExpire = 0;
+            }}>
+            <div className="container" style={{
+              backgroundColor: '#232323a0',
+              paddingTop: 20,
+              paddingRight: 20,
+              paddingLeft: 20,
+              borderRadius: 20,
+            }} onClick={(e) => {
+              e.stopPropagation();
+            }}>
+              <div style={{ textAlign: 'center', fontSize: '1.5em' }}>{!!store.alertMessage && store.alertMessage[0]}</div>
+              <div style={{
+                maxHeight: 'calc(100vh - 100px)',
+                overflow: 'scroll'
+              }}>
+                <pre style={{
+                  margin: 0,
+                  padding: 0,
+                  whiteSpace: 'pre-wrap',
+                  fontSize: '0.75em',
+                  paddingBottom: 20
+                }}>
+                  {!!store.alertMessage && store.alertMessage[1]}
+                </pre>
+              </div>
+            </div>
+          </div>
+          <div style={{
+            position: 'fixed',
+            width: '100%',
+            height: '100%',
+            backgroundColor: '#232323a0',
+            backdropFilter: 'blur(4px) brightness(0.65)',
+            display: 'flex',
+            opacity: (store.lastUpdate === 0 || (Math.max(store.timeCheck, Date.now()) - store.lastUpdate > 5000)) ? 1 : 0,
+            flexDirection: 'column',
+            alignItems: 'center',
+            justifyContent: 'center',
+            zIndex: 5,
+            marginLeft: -20,
+            marginRight: -20,
+            transition: 'all 0.5s ease-in-out',
+            pointerEvents: 'none'
+          }}>
+            {(() => {
+              if (store.lastUpdate === 0) return (
+                <>
+                  <div style={{ fontSize: '4em' }}>🌐</div>
+                  <div style={{ fontSize: '3em' }}>Connecting...</div>
+                </>
+              )
+              if (store.lastUpdate - store.connectedAt < 1000) return (
+                <>
+                  <div style={{ fontSize: '4em' }}>🌐</div>
+                  <div style={{ fontSize: '3em' }}>Connected</div>
+                </>
+              )
+              if (store.lastUpdate > 0) return (
+                <>
+                  <div style={{ fontSize: '4em' }}>⚠️</div>
+                  <div style={{ fontSize: '3em' }}>Connection Lost</div>
+                  <div style={{ fontSize: '1em' }}>{formatTimeDiff(store.lastUpdate)}</div>
+                </>
+              )
+            })()}
+          </div>
+        </>
       )
     });
 
